import streamlit as st
import streamlit.components.v1 as components

# ‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î wide mode
st.set_page_config(page_title="Consult Keyword Generator", layout="wide")

# -------------------------------
# ‡πÉ‡∏ä‡πâ session_state ‡πÄ‡∏Å‡πá‡∏ö keyword
# -------------------------------
if "selected_keywords" not in st.session_state:
    st.session_state.selected_keywords = []

# ‡πÄ‡∏û‡∏¥‡πà‡∏° keyword
def add_keyword(keyword):
    if keyword not in st.session_state.selected_keywords:
        st.session_state.selected_keywords.append(keyword)

# ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
def clear_keywords():
    st.session_state.selected_keywords = []

# -------------------------------
# ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏ß‡∏°
# -------------------------------
combined_text = "; ".join(st.session_state.selected_keywords)

# -------------------------------
# Header
# -------------------------------
st.markdown("<h2 style='color:#005B9A;'>üìù ‡∏£‡∏∞‡∏ö‡∏ö‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° consult</h2>", unsafe_allow_html=True)

# ===============================
# üîò Top Bar (Copy + Text + Clear)
# ===============================
with st.container():
    col1, col2, col3 = st.columns([2, 7, 2])

    with col1:
        components.html(
            f"""
            <button onclick="navigator.clipboard.writeText('{combined_text}'); alert('‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!');"
                    style="padding:0.5em 1.2em; font-size:16px; border-radius:5px; background-color:#4CAF50; color:white; border:none; cursor:pointer; width:100%;">
                üìã ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
            </button>
            """,
            height=60,
        )

    with col2:
        st.text_area("‡∏£‡∏ß‡∏°‡∏Ñ‡∏≥ consult", value=combined_text, height=80)

    with col3:
        if st.button("üóë ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°"):
            clear_keywords()

# ===============================
# üî≤ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á Card Box ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠
# ===============================
def card_container(title):
    st.markdown(
        f"""
        <div style='background-color:#F3F6FA; padding:20px 25px; border-radius:12px; margin-top:25px; border-left:5px solid #0D47A1'>
            <h4 style='font-weight:bold; color:#0D47A1;'>{title}</h4>
        """,
        unsafe_allow_html=True,
    )

def card_end():
    st.markdown("</div>", unsafe_allow_html=True)

# ===============================
# ü©∫ ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ 1: Vital Signs & PE
# ===============================
card_container("1. ‡∏ú‡∏• Vital signs ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢")

with st.expander("‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", expanded=False):
    col_vs, col_pe = st.columns(2)

    # ‡∏ù‡∏±‡πà‡∏á‡∏ã‡πâ‡∏≤‡∏¢: Vital Signs
    with col_vs:
        st.markdown("**üîπ Vital signs**")
        st.button("BP ‡∏™‡∏π‡∏á", on_click=lambda: add_keyword("Abnormal BP"))
        st.button("‡∏ä‡∏µ‡∏û‡∏à‡∏£‡πÄ‡∏£‡πá‡∏ß", on_click=lambda: add_keyword("Abnormal Pulse"))
        st.button("‡∏ä‡∏µ‡∏û‡∏à‡∏£‡∏ä‡πâ‡∏≤", on_click=lambda: add_keyword("Abnormal Pulse"))
        st.button("‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥", on_click=lambda: add_keyword("Abnormal Temperature"))
        st.button("‡∏Å‡∏≤‡∏£‡∏´‡∏≤‡∏¢‡πÉ‡∏à‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥", on_click=lambda: add_keyword("Abnormal Respiration"))

    # ‡∏ù‡∏±‡πà‡∏á‡∏Ç‡∏ß‡∏≤: PE
    with col_pe:
        st.markdown("**üîπ ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢ (PE)**")
        pe_input = st.text_input("‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ú‡∏•‡∏ï‡∏£‡∏ß‡∏à‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢", placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©")

        if st.button("‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏° PE"):
            if pe_input.strip():
                keyword_pe = f"Abnormal PE ({pe_input.strip()})"
                if keyword_pe not in st.session_state.selected_keywords:
                    st.session_state.selected_keywords.append(keyword_pe)

card_end()
